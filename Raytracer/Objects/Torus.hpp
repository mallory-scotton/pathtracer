///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Objects/APrimitiveObject.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Ray::Objects
///////////////////////////////////////////////////////////////////////////////
namespace Ray::Objects
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Torus : public APrimitiveObject
{
public:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    static const ConstructorType& Constructor;

private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    float m_mainRadius;     //<!
    float m_tubeRadius;     //<!
    int m_mainSegments;     //<!
    int m_tubeSegments;     //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param mainRadius
    /// \param tubeRadius
    /// \param mainSegments
    /// \param tubeSegments
    ///
    ///////////////////////////////////////////////////////////////////////////
    Torus(
        float mainRadius = 1.0f,
        float tubeRadius = 0.25f,
        int mainSegments = 32,
        int tubeSegments = 16
    );

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual ~Torus() = default;

protected:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void GenerateGeometry(void) override;
};

} // namespace Ray::Objects
