///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Objects/APrimitiveObject.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Ray::Objects
///////////////////////////////////////////////////////////////////////////////
namespace Ray::Objects
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Fractal : public APrimitiveObject
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    int m_iterations;       //<!
    float m_size;           //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param iterations
    /// \param size
    ///
    ///////////////////////////////////////////////////////////////////////////
    Fractal(int iterations = 3, float size = 1.0f);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual ~Fractal() = default;

protected:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void GenerateGeometry(void) override;

private:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param v1
    /// \param v2
    /// \param v3
    ///
    ///////////////////////////////////////////////////////////////////////////
    void AddTriangle(const Vec4f& v1, const Vec4f& v2, const Vec4f& v3);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param p1
    /// \param p2
    /// \param p3
    /// \param p4
    /// \param current_depth
    ///
    ///////////////////////////////////////////////////////////////////////////
    void GenerateSierpinskiRecursive(
        const Vec4f& p1,
        const Vec4f& p2,
        const Vec4f& p3,
        const Vec4f& p4,
        int current_depth
    );
};

} // namespace Ray::Objects
