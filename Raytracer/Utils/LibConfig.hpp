///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Config.hpp"
#include "Maths/Vec2.hpp"
#include "Maths/Vec3.hpp"
#include <libconfig.h++>

///////////////////////////////////////////////////////////////////////////////
// Namespace Ray
///////////////////////////////////////////////////////////////////////////////
namespace Ray
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class LibConfig
{
public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    class Setting
    {
    private:
        ///////////////////////////////////////////////////////////////////////
        //
        ///////////////////////////////////////////////////////////////////////
        const libconfig::Setting& m_native;

    public:
        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        ///////////////////////////////////////////////////////////////////////
        Setting(const libconfig::Setting& native);

    public:
        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Exists(const String& path) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param setting
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        Optional<Setting> Lookup(const String& path) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, float& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, int& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, bool& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, String& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, Vec2i& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, Vec2f& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, Vec3i& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param path
        /// \param data
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        bool Value(const String& path, Vec3f& data) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        int Length(void) const;

        ///////////////////////////////////////////////////////////////////////
        /// \brief
        ///
        /// \param index
        ///
        /// \return
        ///
        ///////////////////////////////////////////////////////////////////////
        const Setting& At(int index) const;
    };

private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    libconfig::Config m_config;

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    LibConfig(const Path& filePath);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Exists(const String& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    Optional<Setting> Lookup(const String& path) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, float& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, int& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, bool& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, String& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, Vec2i& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, Vec2f& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, Vec3i& data) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param data
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool Value(const String& path, Vec3f& data) const;
};

} // namespace Ray
