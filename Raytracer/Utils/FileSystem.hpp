///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Config.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Ray
///////////////////////////////////////////////////////////////////////////////
namespace Ray
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Fs
{
public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool Mkdir(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool Exists(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static Uint64 Size(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool Delete(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param oldPath
    /// \param newPath
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool Rename(const Path& oldPath, const Path& newPath);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param source
    /// \param destination
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool Copy(const Path& source, const Path& destination);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static Vector<Path> ListDirectory(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    /// \param extensions
    /// \param recursive
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static Vector<Path> DiscoverFilesByExtensions(
        const Path& path,
        const Vector<String>& extensions,
        bool recursive = false
    );

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static String GetExtension(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool IsDirectory(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static bool IsFile(const Path& path);
};

} // namespace Ray
