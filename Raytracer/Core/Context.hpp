///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Utils/Singleton.hpp"
#include "Core/Renderer.hpp"
#include "Components/Scene.h"

///////////////////////////////////////////////////////////////////////////////
// Namespace Ray
///////////////////////////////////////////////////////////////////////////////
namespace Ray
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Context : public Singleton<Context>
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    static const Path DEFAULT_SHADER_PATH;
    static const Path DEFAULT_ASSETS_PATH;
    static const Path DEFAULT_SCENES_PATH;

private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    Path m_shaderPath;                  //<!
    Path m_assetsPath;                  //<!
    Path m_scenesPath;                  //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    UniquePtr<Renderer> renderer;       //<!
    UniquePtr<Scene> scene;             //<!
    Vector<String> availableScenes;     //<!
    bool shutdown;                      //<!
    Vector<Byte> render;                //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    Context(void);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void Initialize(int argc, char* argv[]);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void Shutdown(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    ///////////////////////////////////////////////////////////////////////////
    void SetShaderPath(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    ///////////////////////////////////////////////////////////////////////////
    void SetAssetsPath(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param path
    ///
    ///////////////////////////////////////////////////////////////////////////
    void SetScenesPath(const Path& path);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    Path GetShaderPath(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    Path GetAssetsPath(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    Path GetScenesPath(void) const;
};

} // namespace Ray
